trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:

- task: UseDotNet@2
  displayName: 'Use .NET Core 3.1.x'
  inputs:
    packageType: 'sdk'
    version: '3.1.x'

- task: UseDotNet@2
  displayName: 'Use .NET 7 Preview'
  inputs:
    packageType: 'sdk'
    version: '7.x'
    includePreviewVersions: true

- task: DotNetCoreCLI@2
  displayName: 'dotnet build'
  inputs:
    projects: '**/*.csproj'
    arguments: '--configuration $(BuildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'dotnet test'
  inputs:
    command: test
    arguments: '--configuration $(BuildConfiguration) --framework netcoreapp3.1 --no-build --no-restore'

- task: DotNetCoreCLI@2
  displayName: 'dotnet test'
  inputs:
    command: test
    arguments: '--configuration $(BuildConfiguration) --framework net5.0 --no-build --no-restore'

- task: DotNetCoreCLI@2
  displayName: 'dotnet test'
  inputs:
    command: test
    arguments: '--configuration $(BuildConfiguration) --framework net7.0 --no-build --no-restore'

- task: DotNetCoreCLI@2
  displayName: 'dotnet test (coverage)'
  inputs:
    command: test
    arguments: '--framework net6.0 --no-build --no-restore --configuration $(BuildConfiguration) --collect:"XPlat Code Coverage"' 

- script: 'dotnet tool install --global dotnet-reportgenerator-globaltool --version 4.8.13'  
  displayName: 'Install ReportGenerator tool'  

- script: 'reportgenerator -reports:$(Agent.TempDirectory)/**/coverage.cobertura.xml -targetdir:$(Build.SourcesDirectory)/coverlet/reports -reporttypes:"Cobertura;HtmlInline_AzurePipelines"'  
  displayName: 'Create reports'
  workingDirectory: Maoli.Tests

- task: CopyFiles@2
  displayName: 'Copy bin and obj folders'
  inputs:
    Contents: | 
      $(Build.SourcesDirectory)\LICENSE.txt
      $(Build.SourcesDirectory)\Maoli\bin\**\*.*
      $(Build.SourcesDirectory)\Maoli\obj\project.assets.json
      $(Build.SourcesDirectory)\Maoli\Maoli.csproj
    TargetFolder: '$(Build.ArtifactStagingDirectory)\Maoli'
    CleanTargetFolder: true
    OverWrite: true

- task: PublishBuildArtifacts@1
  displayName: 'Publish artifacts'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'

- task: PublishCodeCoverageResults@1
  displayName: 'Publish code coverage'
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(Agent.TempDirectory)\**\coverage.cobertura.xml'
    reportDirectory: '$(Build.SourcesDirectory)\TestResult\Coverage\Reports'