trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:

- task: UseDotNet@2
  displayName: 'Use .NET 5'
  inputs:
    packageType: 'sdk'
    version: '5.x'
    includePreviewVersions: false

- task: UseDotNet@2
  displayName: 'Use .NET Core 3.1.x'
  inputs:
    packageType: 'sdk'
    version: '3.1.x'

- task: UseDotNet@2
  displayName: 'Use .NET Core 2.2.x'
  inputs:
    packageType: 'sdk'
    version: '2.2.x'

- task: UseDotNet@2
  displayName: 'Use .NET Core 2.1.x'
  inputs:
    packageType: 'sdk'
    version: '2.1.x'

- task: UseDotNet@2
  displayName: 'Use .NET Core 2.0.x'
  inputs:
    packageType: 'sdk'
    version: '2.0.x'

- task: DotNetCoreCLI@2
  displayName: 'dotnet build'
  inputs:
    projects: '**/*.csproj'
    arguments: '--configuration $(BuildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'dotnet test'
  inputs:
    command: test
    arguments: '--configuration $(BuildConfiguration) --framework netcoreapp2.1'

- task: DotNetCoreCLI@2
  displayName: 'dotnet test'
  inputs:
    command: test
    arguments: '--configuration $(BuildConfiguration) --framework netcoreapp3.1'

- task: DotNetCoreCLI@2
  displayName: 'dotnet test'
  inputs:
    command: test
    arguments: '--configuration $(BuildConfiguration) --framework net5.0'

- task: DotNetCoreCLI@2
  displayName: 'dotnet test (coverage)'
  inputs:
    command: test
    arguments: '--framework netcoreapp3.1 --configuration $(BuildConfiguration) /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:CoverletOutput=$(Build.SourcesDirectory)\TestResult\Coverage\'

- task: DotNetCoreCLI@2
  displayName: 'dotnet reportgenerator'
  inputs:
    command: custom
    custom: reportgenerator
    arguments: '"-reports:$(Build.SourcesDirectory)\TestResult\Coverage\coverage.netcoreapp3.1.cobertura.xml" "-targetdir:$(Build.SourcesDirectory)\TestResult\Coverage\Reports" -tag:$(Build.BuildNumber) -reportTypes:HtmlInline_AzurePipelines;htmlInline'
    workingDirectory: Maoli.Tests

- task: CopyFiles@2
  displayName: 'Copy bin and obj folders'
  inputs:
    Contents: | 
      $(Build.SourcesDirectory)\LICENSE.txt
      $(Build.SourcesDirectory)\Maoli\bin\**\*.*
      $(Build.SourcesDirectory)\Maoli\obj\project.assets.json
      $(Build.SourcesDirectory)\Maoli\Maoli.csproj
    TargetFolder: '$(Build.ArtifactStagingDirectory)\Maoli'
    CleanTargetFolder: true
    OverWrite: true

- task: PublishBuildArtifacts@1
  displayName: 'Publish artifacts'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'

- task: PublishCodeCoverageResults@1
  displayName: 'Publish code coverage from $(Build.SourcesDirectory)\TestResult\Coverage\**\coverage.netcoreapp3.1.cobertura.xml'
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(Build.SourcesDirectory)\TestResult\Coverage\**\coverage.netcoreapp3.1.cobertura.xml'
    reportDirectory: '$(Build.SourcesDirectory)\TestResult\Coverage\Reports'